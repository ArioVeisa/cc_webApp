pipeline {
    agent {
        docker {
            image 'node:18-alpine'
        }
    }
    
    environment {
        DOCKER_IMAGE = 'cc-webapp'
        DOCKER_TAG = "${BUILD_NUMBER}"
        CONTAINER_NAME = 'cc-webapp-container'
        CI = 'true'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }
        
        stage('Install Dependencies') {
            steps {
                echo 'Installing npm dependencies...'
                sh 'npm install --cache /tmp/.npm --no-optional'
            }
        }
        
        stage('Run Tests') {
            steps {
                echo 'Running tests...'
                sh 'npm run test:ci'
            }
        }
        
        stage('Build Application') {
            steps {
                echo 'Building React application...'
                sh 'npm run build'
                echo 'Build completed successfully!'
            }
        }
        
        stage('Deploy Application') {
            steps {
                echo 'Deploying application with serve...'
                sh 'npm install -g serve'
                sh 'pkill -f "serve -s build" || echo "No existing serve process"'
                sh 'nohup serve -s build -l 3000 > /dev/null 2>&1 &'
                echo 'Application deployed successfully!'
            }
        }
        
        stage('Health Check') {
            steps {
                echo 'Performing health check...'
                sh 'sleep 10'
                sh 'curl -f http://localhost:3000 --max-time 30 || exit 1'
                echo 'Health check passed! Application is running on port 3000'
            }
        }
    }
    
    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
            // Optional: Send notification
        }
        failure {
            echo 'Pipeline failed!'
            // Optional: Send failure notification
        }
    }
}